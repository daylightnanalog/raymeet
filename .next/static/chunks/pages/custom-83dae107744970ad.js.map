{"version":3,"file":"static/chunks/pages/custom-83dae107744970ad.js","mappings":"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","sources":["webpack://_N_E/?4833","webpack://_N_E/./lib/Debug.tsx","webpack://_N_E/./pages/custom/index.tsx","webpack://_N_E/./styles/Debug.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/custom\",\n      function () {\n        return require(\"private-next-pages/custom/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/custom\"])\n      });\n    }\n  ","import * as React from 'react';\nimport { useRoomContext } from '@livekit/components-react';\nimport { setLogLevel, LogLevel, RemoteTrackPublication } from 'livekit-client';\nimport { tinykeys } from 'tinykeys';\nimport styles from '../styles/Debug.module.css';\n\nexport const useDebugMode = ({ logLevel }: { logLevel?: LogLevel }) => {\n  setLogLevel(logLevel ?? 'debug');\n  const room = useRoomContext();\n\n  React.useEffect(() => {\n    // @ts-expect-error\n    window.__lk_room = room;\n\n    return () => {\n      // @ts-expect-error\n      window.__lk_room = undefined;\n    };\n  }, []);\n};\n\nexport const DebugMode = ({ logLevel }: { logLevel?: LogLevel }) => {\n  const room = useRoomContext();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [, setRender] = React.useState({});\n\n  useDebugMode({ logLevel });\n\n  React.useEffect(() => {\n    if (window) {\n      const unsubscribe = tinykeys(window, {\n        'Shift+D': () => {\n          console.log('setting open');\n          setIsOpen((open) => !open);\n        },\n      });\n\n      // timer to re-render\n      const interval = setInterval(() => {\n        setRender({});\n      }, 1000);\n\n      return () => {\n        unsubscribe();\n        clearInterval(interval);\n      };\n    }\n  }, [isOpen]);\n\n  if (typeof window === 'undefined' || !isOpen) {\n    return null;\n  }\n\n  const handleSimulate = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n    if (value == '') {\n      return;\n    }\n    event.target.value = '';\n    let isReconnect = false;\n    switch (value) {\n      case 'signal-reconnect':\n        isReconnect = true;\n\n      // fall through\n      default:\n        // @ts-expect-error\n        room.simulateScenario(value);\n    }\n  };\n\n  const lp = room.localParticipant;\n\n  if (!isOpen) {\n    return <></>;\n  } else {\n    return (\n      <div className={styles.overlay}>\n        <section id=\"room-info\">\n          <h3>\n            Room Info {room.name}: {room.sid}\n          </h3>\n        </section>\n        <details open>\n          <summary>\n            <b>Local Participant: {lp.identity}</b>\n          </summary>\n          <details open className={styles.detailsSection}>\n            <summary>\n              <b>Published tracks</b>\n            </summary>\n            <div>\n              {Array.from(lp.tracks.values()).map((t) => (\n                <>\n                  <div>\n                    <i>\n                      {t.source.toString()}\n                      &nbsp;<span>{t.trackSid}</span>\n                    </i>\n                  </div>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Kind</td>\n                        <td>\n                          {t.kind}&nbsp;\n                          {t.kind === 'video' && (\n                            <span>\n                              {t.track?.dimensions?.width}x{t.track?.dimensions?.height}\n                            </span>\n                          )}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Bitrate</td>\n                        <td>{Math.ceil(t.track!.currentBitrate / 1000)} kbps</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </>\n              ))}\n            </div>\n          </details>\n          <details open className={styles.detailsSection}>\n            <summary>\n              <b>Permissions</b>\n            </summary>\n            <div>\n              <table>\n                <tbody>\n                  {lp.permissions &&\n                    Object.entries(lp.permissions).map(([key, val]) => (\n                      <>\n                        <tr>\n                          <td>{key}</td>\n                          {key !== 'canPublishSources' ? (\n                            <td>{val.toString()}</td>\n                          ) : (\n                            <td> {val.join(', ')} </td>\n                          )}\n                        </tr>\n                      </>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </details>\n        </details>\n\n        <details>\n          <summary>\n            <b>Remote Participants</b>\n          </summary>\n          {Array.from(room.participants.values()).map((p) => (\n            <details key={p.sid} className={styles.detailsSection}>\n              <summary>\n                <b>\n                  {p.identity}\n                  <span></span>\n                </b>\n              </summary>\n              <div>\n                {Array.from(p.tracks.values()).map((t) => (\n                  <>\n                    <div>\n                      <i>\n                        {t.source.toString()}\n                        &nbsp;<span>{t.trackSid}</span>\n                      </i>\n                    </div>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Kind</td>\n                          <td>\n                            {t.kind}&nbsp;\n                            {t.kind === 'video' && (\n                              <span>\n                                {t.dimensions?.width}x{t.dimensions?.height}\n                              </span>\n                            )}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Status</td>\n                          <td>{trackStatus(t)}</td>\n                        </tr>\n                        {t.track && (\n                          <tr>\n                            <td>Bitrate</td>\n                            <td>{Math.ceil(t.track.currentBitrate / 1000)} kbps</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </>\n                ))}\n              </div>\n            </details>\n          ))}\n        </details>\n      </div>\n    );\n  }\n};\n\nfunction trackStatus(t: RemoteTrackPublication): string {\n  if (t.isSubscribed) {\n    return t.isEnabled ? 'enabled' : 'disabled';\n  } else {\n    return 'unsubscribed';\n  }\n}\n","import { formatChatMessageLinks, LiveKitRoom, VideoConference } from '@livekit/components-react';\nimport { LogLevel } from 'livekit-client';\nimport { useRouter } from 'next/router';\nimport { DebugMode } from '../../lib/Debug';\n\nexport default function CustomRoomConnection() {\n  const router = useRouter();\n  const { liveKitUrl, token } = router.query;\n  if (typeof liveKitUrl !== 'string') {\n    return <h2>Missing LiveKit URL</h2>;\n  }\n  if (typeof token !== 'string') {\n    return <h2>Missing LiveKit token</h2>;\n  }\n\n  return (\n    <main data-lk-theme=\"default\">\n      {liveKitUrl && (\n        <LiveKitRoom token={token} serverUrl={liveKitUrl} audio={true} video={true}>\n          <VideoConference chatMessageFormatter={formatChatMessageLinks} />\n          <DebugMode logLevel={LogLevel.info} />\n        </LiveKitRoom>\n      )}\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Debug_overlay__6m2KJ\",\"detailsSection\":\"Debug_detailsSection__L267_\"};"],"names":["window","__NEXT_P","push","DebugMode","logLevel","room","useRoomContext","React","isOpen","setIsOpen","setRender","setLogLevel","__lk_room","undefined","useDebugMode","unsubscribe","tinykeys","console","log","open","interval","setInterval","clearInterval","lp","localParticipant","div","className","styles","section","id","h3","name","sid","details","summary","b","identity","Array","from","tracks","values","map","t","i","source","toString","span","trackSid","table","tbody","tr","td","kind","track","dimensions","width","height","Math","ceil","currentBitrate","permissions","Object","entries","key","val","join","participants","p","trackStatus","isSubscribed","isEnabled","CustomRoomConnection","router","useRouter","query","liveKitUrl","token","h2","main","data-lk-theme","LiveKitRoom","serverUrl","audio","video","VideoConference","chatMessageFormatter","formatChatMessageLinks","LogLevel","module","exports"],"sourceRoot":""}